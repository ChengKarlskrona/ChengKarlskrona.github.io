{"meta":{"title":"Code_Cheng Site","subtitle":"python | html5 | javascript | database | Everything I Want","description":"Start From Zero","author":"Cheng Wang","url":"http://clovel.cn"},"pages":[{"title":"","date":"2017-02-20T13:55:16.000Z","updated":"2017-02-21T08:40:16.000Z","comments":false,"path":"categories/index.html","permalink":"http://clovel.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-02-20T13:55:05.000Z","updated":"2017-02-21T08:39:52.000Z","comments":false,"path":"tags/index.html","permalink":"http://clovel.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"WPF--Use Toggle Button And Checkbox Create Slide Button","slug":"WPF-Use-Toggle-Button-And-Checkbox-Create-Slide-Button","date":"2018-10-23T21:02:24.000Z","updated":"2018-10-25T09:40:25.151Z","comments":true,"path":"2018/10/23/WPF-Use-Toggle-Button-And-Checkbox-Create-Slide-Button/","link":"","permalink":"http://clovel.cn/2018/10/23/WPF-Use-Toggle-Button-And-Checkbox-Create-Slide-Button/","excerpt":"Due to the designer want a switch button, so I found two different way to built the button.I will description them in the following part. Slide Button Use ToogleButtonThe Xaml code is the following:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109&lt;LinearGradientBrush x:Key=&quot;ButtonNormalBackgroundFill&quot; EndPoint=&quot;0.5,1&quot; StartPoint=&quot;0.5,0&quot;&gt; &lt;GradientStop Color=&quot;#FFFFFFFF&quot; Offset=&quot;0&quot;/&gt; &lt;GradientStop Color=&quot;#FFF0F0EA&quot; Offset=&quot;0.9&quot;/&gt;&lt;/LinearGradientBrush&gt;&lt;SolidColorBrush x:Key=&quot;ButtonBorder&quot; Color=&quot;#FF003C74&quot;/&gt;&lt;Style x:Key=&quot;ToggleButtonStyle1&quot; TargetType=&quot;&#123;x:Type ToggleButton&#125;&quot;&gt; &lt;Setter Property=&quot;FocusVisualStyle&quot; Value=&quot;&#123;x:Null&#125;&quot;/&gt; &lt;Setter Property=&quot;Background&quot; Value=&quot;&#123;StaticResource ButtonNormalBackgroundFill&#125;&quot;/&gt; &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;&#123;StaticResource ButtonBorder&#125;&quot;/&gt; &lt;Setter Property=&quot;Foreground&quot; Value=&quot;&#123;DynamicResource &#123;x:Static SystemColors.ControlTextBrushKey&#125;&#125;&quot;/&gt; &lt;Setter Property=&quot;HorizontalContentAlignment&quot; Value=&quot;Center&quot;/&gt; &lt;Setter Property=&quot;VerticalContentAlignment&quot; Value=&quot;Center&quot;/&gt; &lt;Setter Property=&quot;Template&quot;&gt; &lt;Setter.Value&gt; &lt;ControlTemplate TargetType=&quot;&#123;x:Type ToggleButton&#125;&quot;&gt; &lt;ControlTemplate.Resources&gt; &lt;Storyboard x:Key=&quot;OnUnchecked1&quot;&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path1&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path2&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;StringAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextBlock.Text)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;DiscreteStringKeyFrame KeyTime=&quot;0&quot; Value=&quot;OFF&quot;/&gt; &lt;/StringAnimationUsingKeyFrames&gt; &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextElement.Foreground).(SolidColorBrush.Color)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0&quot; Value=&quot;White&quot;/&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;Red&quot;/&gt; &lt;/ColorAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;Storyboard x:Key=&quot;OnChecked1&quot;&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path1&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path2&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;StringAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextBlock.Text)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;DiscreteStringKeyFrame KeyTime=&quot;0&quot; Value=&quot;ON&quot;/&gt; &lt;/StringAnimationUsingKeyFrames&gt; &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextElement.Foreground).(SolidColorBrush.Color)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0&quot; Value=&quot;White&quot;/&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;#FF63FA00&quot;/&gt; &lt;/ColorAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;/ControlTemplate.Resources&gt; &lt;Border CornerRadius=&quot;15&quot; Background=&quot;#FF3B3939&quot; Width=&quot;90&quot; Height=&quot;30&quot;&gt; &lt;Grid&gt; &lt;TextBlock x:Name=&quot;displayText&quot; Text=&quot;OFF&quot; Foreground=&quot;Red&quot; HorizontalAlignment=&quot;Center&quot; VerticalAlignment=&quot;Center&quot; &gt;&lt;/TextBlock&gt; &lt;Path x:Name=&quot;path2&quot; Fill=&quot;Black&quot;&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;Path x:Name=&quot;path1&quot; Fill=&quot;#FF818080&quot;&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;Path x:Name=&quot;path&quot;&gt; &lt;Path.Fill&gt; &lt;LinearGradientBrush EndPoint=&quot;0.5,1&quot; StartPoint=&quot;0.5,0&quot;&gt; &lt;GradientStop Color=&quot;#FF807F7F&quot; Offset=&quot;0&quot;/&gt; &lt;GradientStop Color=&quot;#FF373636&quot; Offset=&quot;1&quot;/&gt; &lt;/LinearGradientBrush&gt; &lt;/Path.Fill&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;/Grid&gt; &lt;/Border&gt; &lt;ControlTemplate.Triggers&gt; &lt;EventTrigger RoutedEvent=&quot;ToggleButton.Unchecked&quot;&gt; &lt;BeginStoryboard x:Name=&quot;OnUnchecked1_BeginStoryboard&quot; Storyboard=&quot;&#123;StaticResource OnUnchecked1&#125;&quot;/&gt; &lt;/EventTrigger&gt; &lt;EventTrigger RoutedEvent=&quot;ToggleButton.Checked&quot;&gt; &lt;BeginStoryboard x:Name=&quot;OnChecked1_BeginStoryboard&quot; Storyboard=&quot;&#123;StaticResource OnChecked1&#125;&quot;/&gt; &lt;/EventTrigger&gt; &lt;/ControlTemplate.Triggers&gt; &lt;/ControlTemplate&gt; &lt;/Setter.Value&gt; &lt;/Setter&gt;&lt;/Style&gt;","text":"Due to the designer want a switch button, so I found two different way to built the button.I will description them in the following part. Slide Button Use ToogleButtonThe Xaml code is the following:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109&lt;LinearGradientBrush x:Key=&quot;ButtonNormalBackgroundFill&quot; EndPoint=&quot;0.5,1&quot; StartPoint=&quot;0.5,0&quot;&gt; &lt;GradientStop Color=&quot;#FFFFFFFF&quot; Offset=&quot;0&quot;/&gt; &lt;GradientStop Color=&quot;#FFF0F0EA&quot; Offset=&quot;0.9&quot;/&gt;&lt;/LinearGradientBrush&gt;&lt;SolidColorBrush x:Key=&quot;ButtonBorder&quot; Color=&quot;#FF003C74&quot;/&gt;&lt;Style x:Key=&quot;ToggleButtonStyle1&quot; TargetType=&quot;&#123;x:Type ToggleButton&#125;&quot;&gt; &lt;Setter Property=&quot;FocusVisualStyle&quot; Value=&quot;&#123;x:Null&#125;&quot;/&gt; &lt;Setter Property=&quot;Background&quot; Value=&quot;&#123;StaticResource ButtonNormalBackgroundFill&#125;&quot;/&gt; &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;&#123;StaticResource ButtonBorder&#125;&quot;/&gt; &lt;Setter Property=&quot;Foreground&quot; Value=&quot;&#123;DynamicResource &#123;x:Static SystemColors.ControlTextBrushKey&#125;&#125;&quot;/&gt; &lt;Setter Property=&quot;HorizontalContentAlignment&quot; Value=&quot;Center&quot;/&gt; &lt;Setter Property=&quot;VerticalContentAlignment&quot; Value=&quot;Center&quot;/&gt; &lt;Setter Property=&quot;Template&quot;&gt; &lt;Setter.Value&gt; &lt;ControlTemplate TargetType=&quot;&#123;x:Type ToggleButton&#125;&quot;&gt; &lt;ControlTemplate.Resources&gt; &lt;Storyboard x:Key=&quot;OnUnchecked1&quot;&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path1&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path2&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;StringAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextBlock.Text)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;DiscreteStringKeyFrame KeyTime=&quot;0&quot; Value=&quot;OFF&quot;/&gt; &lt;/StringAnimationUsingKeyFrames&gt; &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextElement.Foreground).(SolidColorBrush.Color)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0&quot; Value=&quot;White&quot;/&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;Red&quot;/&gt; &lt;/ColorAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;Storyboard x:Key=&quot;OnChecked1&quot;&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path1&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(FrameworkElement.Margin)&quot; Storyboard.TargetName=&quot;path2&quot;&gt; &lt;EasingThicknessKeyFrame KeyTime=&quot;0:0:0.5&quot; Value=&quot;-60,0,0,0&quot;/&gt; &lt;/ThicknessAnimationUsingKeyFrames&gt; &lt;StringAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextBlock.Text)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;DiscreteStringKeyFrame KeyTime=&quot;0&quot; Value=&quot;ON&quot;/&gt; &lt;/StringAnimationUsingKeyFrames&gt; &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(TextElement.Foreground).(SolidColorBrush.Color)&quot; Storyboard.TargetName=&quot;displayText&quot;&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0&quot; Value=&quot;White&quot;/&gt; &lt;EasingColorKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;#FF63FA00&quot;/&gt; &lt;/ColorAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;/ControlTemplate.Resources&gt; &lt;Border CornerRadius=&quot;15&quot; Background=&quot;#FF3B3939&quot; Width=&quot;90&quot; Height=&quot;30&quot;&gt; &lt;Grid&gt; &lt;TextBlock x:Name=&quot;displayText&quot; Text=&quot;OFF&quot; Foreground=&quot;Red&quot; HorizontalAlignment=&quot;Center&quot; VerticalAlignment=&quot;Center&quot; &gt;&lt;/TextBlock&gt; &lt;Path x:Name=&quot;path2&quot; Fill=&quot;Black&quot;&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;Path x:Name=&quot;path1&quot; Fill=&quot;#FF818080&quot;&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;Path x:Name=&quot;path&quot;&gt; &lt;Path.Fill&gt; &lt;LinearGradientBrush EndPoint=&quot;0.5,1&quot; StartPoint=&quot;0.5,0&quot;&gt; &lt;GradientStop Color=&quot;#FF807F7F&quot; Offset=&quot;0&quot;/&gt; &lt;GradientStop Color=&quot;#FF373636&quot; Offset=&quot;1&quot;/&gt; &lt;/LinearGradientBrush&gt; &lt;/Path.Fill&gt; &lt;Path.Data&gt; &lt;GeometryGroup&gt; &lt;GeometryGroup.Children&gt; &lt;EllipseGeometry Center=&quot;75,15&quot; RadiusX=&quot;14&quot; RadiusY=&quot;14&quot;&gt;&lt;/EllipseGeometry&gt; &lt;/GeometryGroup.Children&gt; &lt;/GeometryGroup&gt; &lt;/Path.Data&gt; &lt;/Path&gt; &lt;/Grid&gt; &lt;/Border&gt; &lt;ControlTemplate.Triggers&gt; &lt;EventTrigger RoutedEvent=&quot;ToggleButton.Unchecked&quot;&gt; &lt;BeginStoryboard x:Name=&quot;OnUnchecked1_BeginStoryboard&quot; Storyboard=&quot;&#123;StaticResource OnUnchecked1&#125;&quot;/&gt; &lt;/EventTrigger&gt; &lt;EventTrigger RoutedEvent=&quot;ToggleButton.Checked&quot;&gt; &lt;BeginStoryboard x:Name=&quot;OnChecked1_BeginStoryboard&quot; Storyboard=&quot;&#123;StaticResource OnChecked1&#125;&quot;/&gt; &lt;/EventTrigger&gt; &lt;/ControlTemplate.Triggers&gt; &lt;/ControlTemplate&gt; &lt;/Setter.Value&gt; &lt;/Setter&gt;&lt;/Style&gt; The rendering for toggle button is: And We can define the Toggle Button:12&lt;ToggleButton Name=\"LCCSwitchButton\" Content=\"LCC\" FontFamily=\"Arial\" Checked=\"LCCSwitchButton_Checked\" Unchecked=\"LCCSwitchButton_Unchecked\" Style=\"&#123;StaticResource ToggleButtonStyle1&#125;\" FontStyle=\"Normal\" FontWeight=\"Bold\" HorizontalAlignment=\"Left\" Margin=\"184,75,0,0\" VerticalAlignment=\"Top\"/&gt;&lt;ToggleButton Name=\"ProductionSwitchButton\" Content=\"Production\" FontFamily=\"Arial\" Checked=\"ProductionSwitchButton_Checked\" Unchecked=\"ProductionSwitchButton_Unchecked\" Style=\"&#123;StaticResource ToggleButtonStyle1&#125;\" FontStyle=\"Normal\" FontWeight=\"Bold\" HorizontalAlignment=\"Left\" Margin=\"513,75,0,0\" VerticalAlignment=\"Top\" /&gt; Slide Button Use CheckboxThe rendering for Checkbox is:The Xaml code is the following:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;Style x:Key=\"SliderCheckBox\" TargetType=\"&#123;x:Type CheckBox&#125;\"&gt; &lt;Setter Property=\"Foreground\" Value=\"&#123;DynamicResource &#123;x:Static SystemColors.ControlTextBrushKey&#125;&#125;\"/&gt; &lt;Setter Property=\"BorderThickness\" Value=\"1\"/&gt; &lt;Setter Property=\"Cursor\" Value=\"Hand\" /&gt; &lt;Setter Property=\"Template\"&gt; &lt;Setter.Value&gt; &lt;ControlTemplate TargetType=\"&#123;x:Type CheckBox&#125;\"&gt; &lt;ControlTemplate.Resources&gt; &lt;Storyboard x:Key=\"StoryboardIsChecked\"&gt; &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=\"(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)\" Storyboard.TargetName=\"CheckFlag\"&gt; &lt;EasingDoubleKeyFrame KeyTime=\"0\" Value=\"0\"/&gt; &lt;EasingDoubleKeyFrame KeyTime=\"0:0:0.2\" Value=\"40\"/&gt; &lt;/DoubleAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;Storyboard x:Key=\"StoryboardIsCheckedOff\"&gt; &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=\"(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)\" Storyboard.TargetName=\"CheckFlag\"&gt; &lt;EasingDoubleKeyFrame KeyTime=\"0\" Value=\"40\"/&gt; &lt;EasingDoubleKeyFrame KeyTime=\"0:0:0.2\" Value=\"0\"/&gt; &lt;/DoubleAnimationUsingKeyFrames&gt; &lt;/Storyboard&gt; &lt;/ControlTemplate.Resources&gt; &lt;BulletDecorator Background=\"Transparent\" SnapsToDevicePixels=\"true\"&gt; &lt;BulletDecorator.Bullet&gt; &lt;Border x:Name=\"ForegroundPanel\" BorderThickness=\"0\" Width=\"70\" Height=\"30\" CornerRadius=\"15\"&gt; &lt;Canvas&gt; &lt;Border Background=\"White\" x:Name=\"CheckFlag\" CornerRadius=\"15\" VerticalAlignment=\"Center\" BorderThickness=\"1\" Width=\"30\" Height=\"30\" RenderTransformOrigin=\"0.5,0.5\"&gt; &lt;Border.RenderTransform&gt; &lt;TransformGroup&gt; &lt;ScaleTransform/&gt; &lt;SkewTransform/&gt; &lt;RotateTransform/&gt; &lt;TranslateTransform/&gt; &lt;/TransformGroup&gt; &lt;/Border.RenderTransform&gt; &lt;Border.Effect&gt; &lt;DropShadowEffect ShadowDepth=\"1\" Direction=\"180\" /&gt; &lt;/Border.Effect&gt; &lt;/Border&gt; &lt;/Canvas&gt; &lt;/Border&gt; &lt;/BulletDecorator.Bullet&gt; &lt;ContentPresenter HorizontalAlignment=\"&#123;TemplateBinding HorizontalContentAlignment&#125;\" Margin=\"&#123;TemplateBinding Padding&#125;\" RecognizesAccessKey=\"True\" SnapsToDevicePixels=\"&#123;TemplateBinding SnapsToDevicePixels&#125;\" VerticalAlignment=\"Center\"/&gt; &lt;/BulletDecorator&gt; &lt;ControlTemplate.Triggers&gt; &lt;Trigger Property=\"HasContent\" Value=\"true\"&gt; &lt;Setter Property=\"FocusVisualStyle\" Value=\"&#123;StaticResource CheckRadioFocusVisual&#125;\"/&gt; &lt;Setter Property=\"Padding\" Value=\"4,0,0,0\"/&gt; &lt;/Trigger&gt; &lt;Trigger Property=\"IsEnabled\" Value=\"false\"&gt; &lt;Setter Property=\"Foreground\" Value=\"&#123;DynamicResource &#123;x:Static SystemColors.GrayTextBrushKey&#125;&#125;\"/&gt; &lt;/Trigger&gt; &lt;Trigger Property=\"IsChecked\" Value=\"True\"&gt; &lt;!--&lt;Setter TargetName=\"ForegroundPanel\" Property=\"Background\" Value=\"&#123;DynamicResource Accent&#125;\" /&gt;--&gt; &lt;Setter TargetName=\"ForegroundPanel\" Property=\"Background\" Value=\"Green\" /&gt; &lt;Trigger.EnterActions&gt; &lt;BeginStoryboard x:Name=\"BeginStoryboardCheckedTrue\" Storyboard=\"&#123;StaticResource StoryboardIsChecked&#125;\" /&gt; &lt;RemoveStoryboard BeginStoryboardName=\"BeginStoryboardCheckedFalse\" /&gt; &lt;/Trigger.EnterActions&gt; &lt;/Trigger&gt; &lt;Trigger Property=\"IsChecked\" Value=\"False\"&gt; &lt;Setter TargetName=\"ForegroundPanel\" Property=\"Background\" Value=\"Gray\" /&gt; &lt;Trigger.EnterActions&gt; &lt;BeginStoryboard x:Name=\"BeginStoryboardCheckedFalse\" Storyboard=\"&#123;StaticResource StoryboardIsCheckedOff&#125;\" /&gt; &lt;RemoveStoryboard BeginStoryboardName=\"BeginStoryboardCheckedTrue\" /&gt; &lt;/Trigger.EnterActions&gt; &lt;/Trigger&gt; &lt;/ControlTemplate.Triggers&gt; &lt;/ControlTemplate&gt; &lt;/Setter.Value&gt; &lt;/Setter&gt;&lt;/Style&gt; And We can define the Toggle Button:12&lt;CheckBox Name=\"LCCSwitchCheckbox\" Margin=\"184,75,1023,617\" Checked=\"LCCSwitchButton_Checked\" Unchecked=\"LCCSwitchButton_Unchecked\" Style=\"&#123;DynamicResource SliderCheckBox&#125;\" Content=\"&#123;Binding ElementName=LCCSwitchButton_Checked,Path=IsChecked&#125;\" /&gt;&lt;CheckBox Name=\"ProductionSwitchCheckbox\" Margin=\"513,75,694,617\" Checked=\"ProductionSwitchButton_Checked\" Unchecked=\"ProductionSwitchButton_Unchecked\" Style=\"&#123;DynamicResource SliderCheckBox&#125;\" Content=\"&#123;Binding ElementName=ProductionSwitchCheckbox,Path=IsChecked&#125;\" /&gt;","categories":[{"name":"WPF","slug":"WPF","permalink":"http://clovel.cn/categories/WPF/"}],"tags":[{"name":"WPF","slug":"WPF","permalink":"http://clovel.cn/tags/WPF/"},{"name":"ToggleButton","slug":"ToggleButton","permalink":"http://clovel.cn/tags/ToggleButton/"},{"name":"Checkbox","slug":"Checkbox","permalink":"http://clovel.cn/tags/Checkbox/"}]},{"title":"GetAwaiter Error in UWP","slug":"GetAwaiter-Error-in-UWP","date":"2018-08-30T17:53:55.000Z","updated":"2018-10-25T09:12:23.728Z","comments":true,"path":"2018/08/30/GetAwaiter-Error-in-UWP/","link":"","permalink":"http://clovel.cn/2018/08/30/GetAwaiter-Error-in-UWP/","excerpt":"","text":"When I use await in an asynchronous function, I get the following error: 1Error CS4036 &apos;IAsyncAction&apos; does not contain a definition for &apos;GetAwaiter&apos; and no extension method &apos;GetAwaiter&apos; accepting a first argument of type &apos;IAsyncAction&apos; could be found (are you missing a using directive for &apos;System&apos;?` Solution: using System;","categories":[{"name":"UWP","slug":"UWP","permalink":"http://clovel.cn/categories/UWP/"}],"tags":[{"name":"UWP","slug":"UWP","permalink":"http://clovel.cn/tags/UWP/"}]},{"title":"Show the Database Data in Combobox","slug":"Show-the-Database-Data-in-Combobox","date":"2018-08-04T07:45:31.000Z","updated":"2018-08-30T17:50:12.000Z","comments":true,"path":"2018/08/04/Show-the-Database-Data-in-Combobox/","link":"","permalink":"http://clovel.cn/2018/08/04/Show-the-Database-Data-in-Combobox/","excerpt":"Collect the data from database, and showed on the comboboxIn xaml page, we create a combobox, and named it as uxTitleSelector. 1&lt;ComboBox Name=\"uxTitleSelector\" FontSize=\"18\" SelectionChanged=\"uxTitleSelector_SelectionChanged\" HorizontalAlignment=\"Left\" Margin=\"96,55,0,0\" VerticalAlignment=\"Top\" Width=\"260\" Height=\"30\"&gt; &lt;/ComboBox&gt;","text":"Collect the data from database, and showed on the comboboxIn xaml page, we create a combobox, and named it as uxTitleSelector. 1&lt;ComboBox Name=\"uxTitleSelector\" FontSize=\"18\" SelectionChanged=\"uxTitleSelector_SelectionChanged\" HorizontalAlignment=\"Left\" Margin=\"96,55,0,0\" VerticalAlignment=\"Top\" Width=\"260\" Height=\"30\"&gt; &lt;/ComboBox&gt; And in the cs file, the code is: 1234567private void ComboBoxShow() &#123; DataTable ComboBoxShow = FileImportShow.ComboBoxContentShow(); uxTitleSelector.ItemsSource = ComboBoxShow.DefaultView; uxTitleSelector.DisplayMemberPath = &quot;EditionInfo&quot;; // It&apos;s the database column name &#125; This this function call a method from FileImportShow class: 123456789101112131415161718192021222324252627#region Bind the EditionComboBox to DataBase(UniMail_TitleTable) public static DataTable ComboBoxContentShow() &#123; DataTable ConBoxContent = new DataTable(); connsql = &quot;Data Source=localhost;Initial Catalog=UniMail_Milano;Integrated Security=False;User ID=sa;Password=DinCare2018&quot;; SqlConnection conn = new SqlConnection(connsql); try &#123; conn.Open(); String sql = &quot;select cast(TitleName as varchar(10)) + &apos; (&apos; + cast(TitleText as varchar(50)) + &apos;)&apos; as EditionInfo from UniMail_TitleTable&quot;; SqlDataAdapter da = new SqlDataAdapter(sql, conn); da.Fill(ConBoxContent); return ConBoxContent; &#125; catch &#123; &#125; finally &#123; conn.Close(); &#125; return ConBoxContent; &#125; #endregion","categories":[{"name":"C#","slug":"C","permalink":"http://clovel.cn/categories/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://clovel.cn/tags/C/"},{"name":"WPF","slug":"WPF","permalink":"http://clovel.cn/tags/WPF/"},{"name":"SqlServer","slug":"SqlServer","permalink":"http://clovel.cn/tags/SqlServer/"},{"name":"Combobox","slug":"Combobox","permalink":"http://clovel.cn/tags/Combobox/"}]},{"title":"WPF&C#: Connect to Sql Server","slug":"WPF-C-Connect-to-Sql-Server","date":"2018-07-28T11:32:04.000Z","updated":"2018-08-30T17:50:46.000Z","comments":true,"path":"2018/07/28/WPF-C-Connect-to-Sql-Server/","link":"","permalink":"http://clovel.cn/2018/07/28/WPF-C-Connect-to-Sql-Server/","excerpt":"Check the ConnectInput ServerName, DatabaseName, UserName and Password, then click a button, it should show the connetion message. In this part, i designed a login windows, user need input their ServerName, DatabaseName, UserName and Password, then click login button, it will call the following function, give connsql the four values, then make the connection.","text":"Check the ConnectInput ServerName, DatabaseName, UserName and Password, then click a button, it should show the connetion message. In this part, i designed a login windows, user need input their ServerName, DatabaseName, UserName and Password, then click login button, it will call the following function, give connsql the four values, then make the connection.Before this function, a static global variable is already declared, after login click, the textbox will give these variable a value, then they other file can call these value in the whole soultion.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//Static Global Variablestatic class LoginInfo&#123; public static string ServerName; public static string DatabaseName; public static string UserNameLogin; public static string LoginPassword;&#125;private void sLoginButton_Click(object sender, RoutedEventArgs e)&#123; String connsql = &quot;Data Source=&quot; + sSververNameText.Text + &quot;; Initial Catalog=&quot;+ sDatabaseText.Text +&quot;; Integrated Security=False;User ID=&quot;+ sUserNameText.Text +&quot;; Password=&quot;+ sPasswordText.Text+&quot;&quot;; SqlConnection conn = new SqlConnection(connsql); string sql = &quot;select count(*) from UniMail_AccountInfoSave&quot;; SqlCommand com = new SqlCommand(sql, conn); try &#123; conn.Open(); //Give The Static Global Variable a Value LoginInfo.ServerName = sSververNameText.Text; LoginInfo.DatabaseName = sDatabaseText.Text; LoginInfo.UserNameLogin = sUserNameText.Text; LoginInfo.LoginPassword = sPasswordText.Text; MessageBoxResult result = MessageBox.Show(&quot;Database Connected&quot;, &quot;DinCare File Import&quot;, MessageBoxButton.OK, MessageBoxImage.Information); if (result == MessageBoxResult.OK) &#123; MainWindow MainWindowShow = new MainWindow(); MainWindowShow.ShowDialog(); this.Close(); &#125; else &#123; return; &#125; &#125; catch (Exception) &#123; MessageBox.Show(&quot;Database Can not Connect, Please Try again!&quot;); &#125; finally &#123; conn.Close(); &#125;&#125; Here is the xaml file12345678910111213141516&lt;Grid Background=\"#383838\"&gt; &lt;Label Content=\"Server Name\" FontSize=\"18\" Foreground=\"White\" FontWeight=\"Normal\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Margin=\"82,140,0,0\"/&gt; &lt;Label Content=\"Database\" FontSize=\"18\" Foreground=\"White\" FontWeight=\"Normal\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Margin=\"82,200,0,0\"/&gt; &lt;Label Content=\"User Name\" FontSize=\"18\" Foreground=\"White\" FontWeight=\"Normal\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Margin=\"82,260,0,0\"/&gt; &lt;Label Content=\"Password\" FontSize=\"18\" Foreground=\"White\" FontWeight=\"Normal\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Margin=\"82,320,0,0\"/&gt; &lt;TextBox Name=\"sSververNameText\" HorizontalAlignment=\"Left\" TextAlignment=\"Center\" Height=\"34\" FontSize=\"15\" Margin=\"244,140,0,0\" TextWrapping=\"Wrap\" Text=\"localhost\" VerticalAlignment=\"Top\" Width=\"151\"/&gt; &lt;TextBox x:Name=\"sDatabaseText\" HorizontalAlignment=\"Left\" TextAlignment=\"Center\" Height=\"34\" FontSize=\"15\" Margin=\"244,200,0,0\" TextWrapping=\"Wrap\" Text=\"UniMail_Milano\" VerticalAlignment=\"Top\" Width=\"151\"/&gt; &lt;TextBox x:Name=\"sUserNameText\" HorizontalAlignment=\"Left\" TextAlignment=\"Center\" Height=\"34\" FontSize=\"15\" Margin=\"244,260,0,0\" TextWrapping=\"Wrap\" Text=\"sa\" VerticalAlignment=\"Top\" Width=\"151\"/&gt; &lt;TextBox x:Name=\"sPasswordText\" HorizontalAlignment=\"Left\" TextAlignment=\"Center\" Height=\"34\" FontSize=\"15\" Margin=\"244,320,0,0\" TextWrapping=\"Wrap\" Text=\"DinCare2018\" VerticalAlignment=\"Top\" Width=\"151\"/&gt; &lt;Button Name=\"sLoginButton\" Content=\"Sign In\" Background=\"#595656\" Foreground=\"White\" FontSize=\"20\" HorizontalAlignment=\"Left\" Margin=\"244,393,0,0\" VerticalAlignment=\"Top\" Width=\"151\" Height=\"52\" Click=\"sLoginButton_Click\" /&gt; &lt;Button Name=\"sRegisterButton\" Content=\"Register\" Background=\"#595656\" Foreground=\"White\" FontSize=\"20\" HorizontalAlignment=\"Left\" Margin=\"82,393,0,0\" VerticalAlignment=\"Top\" Width=\"151\" Height=\"52\" Click=\"sRegisterButton_Click\" /&gt; &lt;Label Content=\"User\" FontSize=\"18\" Foreground=\"White\" FontWeight=\"Normal\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Margin=\"82,78,0,0\"/&gt; &lt;ComboBox Name=\"UserComboBoxSelector\" SelectionChanged=\"UserComboBoxSelector_SelectionChanged\" HorizontalAlignment=\"Left\" Margin=\"244,78,0,0\" VerticalAlignment=\"Top\" FontSize=\"15\" Width=\"151\" Height=\"34\"/&gt;&lt;/Grid&gt; If database connected, and you click ok, it will open the Mainwindow and close the login window(now it only can hide, a little bug), if database can not connect, it will show “Database Can not Connect, Please Try again!” . Anyway, at the end, it need close the connection.","categories":[{"name":"C#","slug":"C","permalink":"http://clovel.cn/categories/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://clovel.cn/tags/C/"},{"name":"WPF","slug":"WPF","permalink":"http://clovel.cn/tags/WPF/"},{"name":"SqlServer","slug":"SqlServer","permalink":"http://clovel.cn/tags/SqlServer/"}]},{"title":"Make an Apple Official Website","slug":"Make-an-Apple-Official-Website","date":"2017-09-14T06:52:07.000Z","updated":"2017-09-17T18:28:28.000Z","comments":true,"path":"2017/09/14/Make-an-Apple-Official-Website/","link":"","permalink":"http://clovel.cn/2017/09/14/Make-an-Apple-Official-Website/","excerpt":"What we want to do?The following picture is the apple official website, it is not a screenshot of Apple’s official website, but developed by me. Then let’s start:","text":"What we want to do?The following picture is the apple official website, it is not a screenshot of Apple’s official website, but developed by me. Then let’s start: Develop the static web pageAnalysis the pages, we can find there are four parts, the menu, the banner, four little pictures and the footer. The MenuThe menu has nine part, so we can use semantic menu to do this:12345678910111213141516171819202122&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;Apple Store(Not the Official Website)&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"LessonCode/css/semantic.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 菜单部分开始 --&gt; &lt;div class=\"ui inverted nine item large fixed fitted fluid borderless menu\"&gt; &lt;a href=\"#\" class='item'&gt;&lt;img src=\"LessonCode/images/appleicon.png\" class='ui img' alt=\"\"&gt;&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Ipad&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Watch&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;技术支持&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;&lt;img src=\"LessonCode/images/searchicon.png\" alt=\"\"&gt;&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;&lt;img src=\"LessonCode/images/buyicon.png\" alt=\"\"&gt;&lt;/a&gt; &lt;/div&gt; &lt;!-- 菜单部分结束 --&gt; &lt;/body&gt;&lt;/html&gt; The point is &lt;div class=&quot;ui inverted nine item large fixed fitted fluid borderless menu&quot;&gt;, in this sentence: inverted used to reverse the color. nine item means this menu has nine columni,and the nine icon are in the center. large means the item’s size. fixed can fix the menu bar at the top of the page, even if we slides the page to the bottom. fitted can meke the menu and the item to adapt, if not, it maybe has a bigbar and small item. fluid can fill the entire container. borderless can remove the border. The Banner and The Four Picture12345678910111213141516171819202122232425262728&lt;!-- 导航图部分开始 --&gt;&lt;div class=\"ui secondary vertical basic segment \"&gt; &lt;div class=\"ui banner image\"&gt; &lt;img src=\"LessonCode/images/banner.png\" alt=\"\" /&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 导航图部分结束 --&gt;&lt;!-- 4张小图部分开始 --&gt;&lt;div class=\"ui secondary vertical basic segment \"&gt; &lt;div class=\"ui fitted text menu\"&gt; &lt;div class=\"item\"&gt; &lt;img class=\"ui image\" src=\"LessonCode/images/img1.png\" alt=\"\" /&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;img class=\"ui image\" src=\"LessonCode/images/img2.png\" alt=\"\" /&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;img class=\"ui image\" src=\"LessonCode/images/img3.png\" alt=\"\" /&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;img class=\"ui image\" src=\"LessonCode/images/img4.png\" alt=\"\" /&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 4张小图部分结束 --&gt; In this part, we will focused on these two sentences:&lt;div class=&quot;ui senondary vertical basic segment&quot;&gt; and &lt;div class=&quot;ui fitted text menu&quot;&gt; basic has remove the black board. fitted automatically adapt to height and widthi.The FooterThe footer has a single sentence, a base line and fine different column link. So we need use ui container to design the frame, use ui divider to make the base line and use grid to develop the five columns, here is the code:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;!-- 页尾部分开始 --&gt;&lt;div class=\"ui vertical very padded secondary segment\"&gt; &lt;div class=\"ui container\"&gt; &lt;div class=\"sub header\"&gt; 双镜头摄像头仅于 iPhone 7 Plus 提供。亮黑色外观仅于 128GB 及以上存储容量的机型提供。 &lt;/div&gt; &lt;div class=\"ui divider\"&gt;&lt;/div&gt; &lt;div class=\" ui five column grid\"&gt; &lt;div class=\"column\"&gt; &lt;div class=\"ui vertical text menu\"&gt; &lt;div class=\"item\"&gt; &lt;h4 class='ui header'&gt;Apple Store 商店&lt;/h4&gt; &lt;/div&gt; &lt;a href=\"#\" class='item'&gt;Ipod&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"ui vertical text menu\"&gt; &lt;div class=\"item\"&gt; &lt;h4 class='ui header'&gt;Apple Store 商店&lt;/h4&gt; &lt;/div&gt; &lt;a href=\"#\" class='item'&gt;Ipod&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"ui vertical text menu\"&gt; &lt;div class=\"item\"&gt; &lt;h4 class='ui header'&gt;Apple Store 商店&lt;/h4&gt; &lt;/div&gt; &lt;a href=\"#\" class='item'&gt;Ipod&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"ui vertical text menu\"&gt; &lt;div class=\"item\"&gt; &lt;h4 class='ui header'&gt;Apple Store 商店&lt;/h4&gt; &lt;/div&gt; &lt;a href=\"#\" class='item'&gt;Ipod&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"column\"&gt; &lt;div class=\"ui vertical text menu\"&gt; &lt;div class=\"item\"&gt; &lt;h4 class='ui header'&gt;Apple Store 商店&lt;/h4&gt; &lt;/div&gt; &lt;a href=\"#\" class='item'&gt;Ipod&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Iphone&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Mac&lt;/a&gt; &lt;a href=\"#\" class='item'&gt;Music&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; Then we got the static Apple page. The future: Use DJango To Release The Website","categories":[{"name":"webapp","slug":"webapp","permalink":"http://clovel.cn/categories/webapp/"}],"tags":[{"name":"Webapp","slug":"Webapp","permalink":"http://clovel.cn/tags/Webapp/"},{"name":"python","slug":"python","permalink":"http://clovel.cn/tags/python/"},{"name":"semantic","slug":"semantic","permalink":"http://clovel.cn/tags/semantic/"},{"name":"djongo","slug":"djongo","permalink":"http://clovel.cn/tags/djongo/"},{"name":"mysql","slug":"mysql","permalink":"http://clovel.cn/tags/mysql/"}]},{"title":"Something About VSM(Value Steam Mapping)","slug":"Something-About-VSM-Value-Steam-Mapping","date":"2017-09-06T08:49:40.000Z","updated":"2017-09-11T09:03:18.000Z","comments":true,"path":"2017/09/06/Something-About-VSM-Value-Steam-Mapping/","link":"","permalink":"http://clovel.cn/2017/09/06/Something-About-VSM-Value-Steam-Mapping/","excerpt":"What is VSM(Value Steam Mapping)?VSM is a tool that can describe logistics and information flow. It can help companies understand and streamline the production process, and it can identify each step’s value in software development process, the purpose is to identify and reduce the waste in production process.And the VSM process we can see the following picture, and this process based on Khurum's thesis in 2014.","text":"What is VSM(Value Steam Mapping)?VSM is a tool that can describe logistics and information flow. It can help companies understand and streamline the production process, and it can identify each step’s value in software development process, the purpose is to identify and reduce the waste in production process.And the VSM process we can see the following picture, and this process based on Khurum's thesis in 2014. VSM started at the current state map, then identified the value-adding, non-value adding and non-value adding acticities. Use some technology to reduce the non-value adding acticities, then we can got a future state map.","categories":[{"name":"Software Engineering","slug":"Software-Engineering","permalink":"http://clovel.cn/categories/Software-Engineering/"}],"tags":[{"name":"VSM","slug":"VSM","permalink":"http://clovel.cn/tags/VSM/"},{"name":"Software Engineering","slug":"Software-Engineering","permalink":"http://clovel.cn/tags/Software-Engineering/"}]},{"title":"Use SonarQube to Analysis Open Source Java Projects","slug":"Use-SonarQube-to-Analysis-Open-Source-Java-Projects","date":"2017-04-26T20:58:52.000Z","updated":"2017-04-27T07:14:16.000Z","comments":true,"path":"2017/04/26/Use-SonarQube-to-Analysis-Open-Source-Java-Projects/","link":"","permalink":"http://clovel.cn/2017/04/26/Use-SonarQube-to-Analysis-Open-Source-Java-Projects/","excerpt":"Today we plan to learn how to use Sonarqube for static analsis, and our aim is an open source java projects: jExcelApi Install SonarqubeFirst, dwonload the sonarqube from this website:SonarQube, the latest version is 6.3.1.Then open the file and into /Users/wangcheng/Downloads/sonarqube-6.3.1/bin/macosx-universal-64, and run ./sonar.sh start,the result is:123➜ macosx-universal-64 ./sonar.sh startStarting SonarQube...Started SonarQube.","text":"Today we plan to learn how to use Sonarqube for static analsis, and our aim is an open source java projects: jExcelApi Install SonarqubeFirst, dwonload the sonarqube from this website:SonarQube, the latest version is 6.3.1.Then open the file and into /Users/wangcheng/Downloads/sonarqube-6.3.1/bin/macosx-universal-64, and run ./sonar.sh start,the result is:123➜ macosx-universal-64 ./sonar.sh startStarting SonarQube...Started SonarQube. It means Sonarqube started, then input http://localhost:9000/ in your Browser, you will open a website like this:And you can login with the uesrname and password, the default is admin. Insall Sonar-ScannerIf we want to runing analysis, we need choose an analysis method. The following are avaliable: SonarQube Scanner for MSBuild: Launch analysis of .Net projects SonarQube Scanner for Maven: Launch analysis from Maven with minimal configuration SonarQube Scanner for Gradle: Launch Gradle analysis SonarQube Scanner For Jenkins: Launch analysis from Jenkins SonarQube Scanner for Ant: Launch analysis from Ant SonarQube Scanner: Launch analysis from the command line when none of the other analyzers is appropriate Here we choose SonarQube Scanner as our main method, it can used on terminal. Project AnalysisOpen your choosed project, and create a file named sonar-project.properties, and the contents below:1234567891011121314# must be unique in a given SonarQube instancesonar.projectKey=my:project# this is the name and version displayed in the SonarQube UI. Was mandatory prior to SonarQube 6.1.sonar.projectName=My projectsonar.projectVersion=1.0 # Path is relative to the sonar-project.properties file. Replace \"\\\" by \"/\" on Windows.# Since SonarQube 4.2, this property is optional if sonar.modules is set. # If not set, SonarQube starts looking for source code from the directory containing # the sonar-project.properties file.sonar.sources=. # Encoding of the source code. Default is default system encoding#sonar.sourceEncoding=UTF-8 Then Go to the folder where the project is located, and input /Users/wangcheng/Downloads/sonar-scanner-3.0.1.733-macosx/bin/sonar-scanner, actually it is sonar-scanner’s address.And it will run.After the analysis finished, go to your Browser and into your project, you can check the analysis report.","categories":[{"name":"Sonarqube","slug":"Sonarqube","permalink":"http://clovel.cn/categories/Sonarqube/"}],"tags":[{"name":"static analsis","slug":"static-analsis","permalink":"http://clovel.cn/tags/static-analsis/"},{"name":"sonarqube","slug":"sonarqube","permalink":"http://clovel.cn/tags/sonarqube/"},{"name":"software testing","slug":"software-testing","permalink":"http://clovel.cn/tags/software-testing/"}]},{"title":"Practice 4: The use of MongoDB and IPProxy","slug":"Practice-4-The-use-of-MongoDB-and-IPProxy","date":"2017-04-22T08:09:15.000Z","updated":"2017-04-22T08:09:16.000Z","comments":true,"path":"2017/04/22/Practice-4-The-use-of-MongoDB-and-IPProxy/","link":"","permalink":"http://clovel.cn/2017/04/22/Practice-4-The-use-of-MongoDB-and-IPProxy/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Python and Encoding","slug":"Python-and-Encoding","date":"2017-04-22T07:45:59.000Z","updated":"2017-04-22T08:05:20.000Z","comments":true,"path":"2017/04/22/Python-and-Encoding/","link":"","permalink":"http://clovel.cn/2017/04/22/Python-and-Encoding/","excerpt":"Sometimes when we want to scrapy a website, we found the response text can not read.For example, we planed to scrapy Ganji: http://bj.ganji.com/wu/12345678910111213from bs4 import BeautifulSoupimport requestsurl = 'http://bj.ganji.com/wu/'def get_main_list(url): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') main_lists = soup.select('dl.fenlei &gt; dt &gt; a') print(main_lists)get_main_list(url)","text":"Sometimes when we want to scrapy a website, we found the response text can not read.For example, we planed to scrapy Ganji: http://bj.ganji.com/wu/12345678910111213from bs4 import BeautifulSoupimport requestsurl = 'http://bj.ganji.com/wu/'def get_main_list(url): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') main_lists = soup.select('dl.fenlei &gt; dt &gt; a') print(main_lists)get_main_list(url) And this result is: 1234[&lt;a href=\"/jiaju/\" target=\"_blank\"&gt;äºæå®¶å·&lt;/a&gt;, &lt;a href=\"/rirongbaihuo/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;å®¶å±ç¾è´§&lt;/a&gt;, &lt;a href=\"/shouji/\" target=\"_blank\"&gt;äºæææº&lt;/a&gt;, &lt;a href=\"/shoujihaoma/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;ææºå·ç &lt;/a&gt;, &lt;a href=\"/bangong/\" target=\"_blank\"&gt;è®¾å¤/åå¬ç¨å&lt;/a&gt;, &lt;a href=\"/nongyongpin/\" style=\"padding-left: 20px;\"target=\"_blank\"&gt;åç¨å&lt;/a&gt;, &lt;a href=\"/jiadian/\" target=\"_blank\"&gt;å®¶ç¨çµå¨&lt;/a&gt;, &lt;a href=\"/ershoubijibendiannao/\" target=\"_blank\"&gt;äºæç¬è®°æ¬&lt;/a&gt;, &lt;a href=\"/ruanjiantushu/\" target=\"_blank\"&gt;å¾ä¹¦/é³ä¹/è¿å¨&lt;/a&gt;, &lt;a href=\"/yingyouyunfu/\" target=\"_blank\"&gt;æ¯å©´/å¿ç«¥ç¨å&lt;/a&gt;, &lt;a href=\"/diannao/\" target=\"_blank\"&gt;å°å¼çµè/ç$ç»&lt;/a&gt;, &lt;ahref=\"/xianzhilipin/\" target=\"_blank\"&gt;é²ç$®ç¤¼å&lt;/a&gt;, &lt;a href=\"/fushixiaobaxuemao/\" target=\"_blank\"&gt;æé¥°/ç®±å&lt;/a&gt;, &lt;a href=\"/meironghuazhuang/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;ç¾å®¹æ¤è¤/åå¦å&lt;/a&gt;, &lt;a href=\"/shuma/\" target=\"_blank\"&gt;çµå­æ°ç &lt;/a&gt;, &lt;a href=\"/laonianyongpin/\" target=\"_blank\"&gt;èå¹´ç¨å&lt;/a&gt;, &lt;a href=\"/xuniwupin/\"target=\"_blank\"&gt;èæç©å&lt;/a&gt;, &lt;a href=\"/qitawupin/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;æä¸æå«&lt;/a&gt;, &lt;a href=\"/ershoufree/\" target=\"_blank\"&gt;åè´¹èµ é&lt;/a&gt;, &lt;a href=\"/wupinjiaohuan/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;ç©åäº¤æ¢&lt;/a&gt;] It’s the encode problem, then how to solve it?First, we need know the website’s encode, from it’s source code, we can find it’s charset=utf-8,then we can use encoding. 123456789101112131415from bs4 import BeautifulSoupimport requestsurl = 'http://bj.ganji.com/wu/'def get_main_list(url): resp = requests.get(url) # Encoding the resp is a good solution. resp.encoding = 'utf-8' if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') main_lists = soup.select('dl.fenlei &gt; dt &gt; a') print(main_lists)get_main_list(url) And the result is:123[&lt;a href=\"/jiaju/\" target=\"_blank\"&gt;二手家具&lt;/a&gt;, &lt;a href=\"/rirongbaihuo/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;家居百货&lt;/a&gt;, &lt;a href=\"/shouji/\" target=\"_blank\"&gt;二手手机&lt;/a&gt;, &lt;a href=\"/shoujihaoma/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;手机号码&lt;/a&gt;, &lt;a href=\"/bangong/\" target=\"_blank\"&gt;设备/办公用品&lt;/a&gt;, &lt;a href=\"/nongyongpin/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;农用品&lt;/a&gt;, &lt;a href=\"/jiadian/\" target=\"_blank\"&gt;家用电器&lt;/a&gt;, &lt;ahref=\"/ershoubijibendiannao/\" target=\"_blank\"&gt;二手笔记本&lt;/a&gt;, &lt;a href=\"/ruanjiantushu/\" target=\"_blank\"&gt;图书/音乐/运动&lt;/a&gt;, &lt;a href=\"/yingyouyunfu/\" target=\"_blank\"&gt;母婴/儿童用品&lt;/a&gt;, &lt;a href=\"/diannao/\" target=\"_blank\"&gt;台式电脑/网络&lt;/a&gt;, &lt;a href=\"/xianzhilipin/\" target=\"_blank\"&gt;闲置礼品&lt;/a&gt;, &lt;a href=\"/fushixiaobaxuemao/\" target=\"_blank\"&gt;服饰/箱包&lt;/a&gt;, &lt;a href=\"/meironghuazhuang/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;美容护肤/化妆品&lt;/a&gt;, &lt;a href=\"/shuma/\"target=\"_blank\"&gt;电子数码&lt;/a&gt;, &lt;a href=\"/laonianyongpin/\" target=\"_blank\"&gt;老年用品&lt;/a&gt;, &lt;a href=\"/xuniwupin/\" target=\"_blank\"&gt;虚拟物品&lt;/a&gt;, &lt;a href=\"/qitawupin/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;杂七杂八&lt;/a&gt;, &lt;a href=\"/ershoufree/\" target=\"_blank\"&gt;免费赠送&lt;/a&gt;, &lt;a href=\"/wupinjiaohuan/\" style=\"padding-left: 20px;\" target=\"_blank\"&gt;物品交换&lt;/a&gt;]","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://clovel.cn/tags/Python/"},{"name":"encoding","slug":"encoding","permalink":"http://clovel.cn/tags/encoding/"},{"name":"utf-8","slug":"utf-8","permalink":"http://clovel.cn/tags/utf-8/"}]},{"title":"Practice3: Scrapying 58 WebSite List And Detail","slug":"Practice-3_-Scrapying-58-Web-Site-List-And-Detail","date":"2017-04-01T19:59:24.000Z","updated":"2017-04-02T09:43:40.000Z","comments":true,"path":"2017/04/01/Practice-3_-Scrapying-58-Web-Site-List-And-Detail/","link":"","permalink":"http://clovel.cn/2017/04/01/Practice-3_-Scrapying-58-Web-Site-List-And-Detail/","excerpt":"Background58 website is a secondhand e-shop, now we plan to scrapy the second-hand mobile website’s list and each list’s detail, we can see on the following picture:","text":"Background58 website is a secondhand e-shop, now we plan to scrapy the second-hand mobile website’s list and each list’s detail, we can see on the following picture:On the first picture, we do not need scrapying the businesses’ item, we only need scrapying the personal sellers, like the 58 users and zhuanzhuan users. Scrapying The ListNow we start to crawling this page’s information, we need each item’s link:123456789101112131415from bs4 import BeautifulSoupimport requestsurl = 'http://bj.58.com/shouji/'def get_list(url,data=None): resp = requests.get(url) soup = BeautifulSoup(resp.text,'lxml') links = soup.select('tbody &gt; tr &gt; td.t &gt; a.t') for link in links: link = link.get('href').split('?')[0] if link[0:26] != 'http://jump.zhineng.58.com': print(link)get_list(url) From the following picture, we can see each businesses item’s url is http://jump.zhineng.58.com..., and the personal 58 seller’s url is like http://bj.58.com/shouji/29540060394298x.shtml, and zhuanzhuan user’s url is http://zhuanzhuan.58.com/detail/848179153081401353z.shtml, so we can use a if...else loop, to remove all businesses item(code line 13).And the result of this code is :123456789101112131415&gt;&gt;&gt; python3 58_list.pyhttp://bj.58.com/shouji/29540060394298x.shtmlhttp://bj.58.com/shouji/29453529335367x.shtmlhttp://bj.58.com/shouji/29298561814583x.shtmlhttp://bj.58.com/shouji/29517862699182x.shtmlhttp://bj.58.com/shouji/29558478463567x.shtmlhttp://zhuanzhuan.58.com/detail/848174528564281352z.shtmlhttp://zhuanzhuan.58.com/detail/848140382951653387z.shtmlhttp://zhuanzhuan.58.com/detail/848179153081401353z.shtmlhttp://zhuanzhuan.58.com/detail/848152696245026824z.shtmlhttp://zhuanzhuan.58.com/detail/848128647623032840z.shtmlhttp://zhuanzhuan.58.com/detail/848132162044280840z.shtmlhttp://zhuanzhuan.58.com/detail/848114003988267021z.shtmlhttp://zhuanzhuan.58.com/detail/848111912665710605z.shtml... Scrapying Detail58 Users LinkFrom the lsit result, we can see the first five is 58 users link, and it will link to this page:we need scrapy the title,class,view counts,price,area and the publish time, and in this part, view counts is a problem, because we can not get any information.So, we can try to do this:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849From bs4 import BeautifulSoupimport requestsurl = 'http://bj.58.com/shouji/29448470616899x.shtml'def get_review(url): part_link = url.split('/')[-1].strip('x.shtml') url = 'http://jst1.58.com/counter?infoid=&#123;&#125;'.format(str(part_link)) # print(url) headers = &#123; 'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36', 'Cookie':'id58=Ch8BCFjaxDmGEQfEAxATAg==; 58home=bj; als=0; commonTopbar_myfeet_tooltip=end; city=bj; myfeet_tooltip=end; bj58_id58s=\"WlB6dVpRaTAtTXZ1MTUxNg==\"; sessionid=3f9c77fd-4820-45b2-9ec1-168efe3791b2; es_ab=1; 58tj_uuid=aff6d5b1-071f-4599-a863-3583cc4e2c14; new_uv=6; bj58_new_session=1; bj58_init_refer=\"http://bj.58.com/shouji/\"; bj58_new_uv=4', 'Accept':'*/*', 'Accept-Encoding':'gzip, deflate, sdch', 'Accept-Language':'zh-CN,zh;q=0.8', 'Connection':'keep-alive', 'Host':'jst1.58.com', 'Referer':'http://bj.58.com/shouji/&#123;&#125;x.shtml'.format(str(part_link)) &#125; resp = requests.get(url,headers=headers) # print(resp.status_code) if resp.status_code == 200: return resp.text.split('=')[-1] return 0def get_detail_58(url,data=None): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') try: area_detail = '' are a = soup.select('ul.suUl &gt; li:nth-of-type(3) &gt; div.su_con &gt; span.c_25d')[0] area = list(area.stripped_strings) area = area_detail.join(area) data = &#123; 'title':soup.select('div.per_ad_left &gt; div.col_sub.mainTitle &gt; h1')[0].text, 'categorie':soup.select('div.breadCrumb.f12 &gt; span:nth-of-type(3) &gt; a')[0].text.replace('\\r\\n','').strip(), 'price':soup.select('div.su_con &gt; span.price.c_f50')[0].text, 'area':area, 'time':soup.select('ul.mtit_con_left.fl &gt; li.time')[0].text, 'review':get_review(url) &#125; print('Title: '+data['title']+'\\n'+'Time: '+ data['time']+ '\\n' +'Categorie: '+data['categorie']+'\\n'+'Price: '+data['price']+'\\n'+'Area: '+data['area'] +'\\n' + 'Review: ' + data['review']) print('==========================') except Exception as e: print(e) passget_detail_58(url) And we can check the result, after that, we will analysis this code.1234567Title: 苹果7 7p分期付款支持以旧换新Time: 2017-03-28Categorie: 北京二手手机Price: 4199Area: 朝阳-朝外大街Review: 607=========================== In this source code, we firstly built get_detail_58 function, it’s mainly to acquire each item’s information.Title, price and time is very easy, we do not need show it.On the categorie part, the result is \\r\\n 北京二手手机, so we can use replace(&#39;\\r\\n&#39;,&#39;&#39;) to replace the special symbols and then use strip() to remove extra space.On the area part, if we scrapying it directly, the result is 海淀 - 中关村,there are many space here, so we need to deal with the results.1234area_detail = ''area = soup.select('ul.suUl &gt; li:nth-of-type(3) &gt; div.su_con &gt; span.c_25d')[0]area = list(area.stripped_strings)area = area_detail.join(area) On the view counts part, it need us to check the javascript file. so, look at our code, we define a function named get_review(url),the url is the same as the item’s detail page’s url:1234567891011121314151617181920212223def get_review(url): #假如传入的URL是http://bj.58.com/shouji/29448470616899x.shtml,那么按‘\\’分割后最后一个应该是29448470616899x.shtml，然后再用strip('x.html')，去掉x.html，这样就只剩下29448470616899，与js文件的infoid的值是相同的 part_link = url.split('/')[-1].strip('x.shtml') #从header中看到这里的URL应该是http://jst1.58.com/counter?infoid=29448470616899,所以我们用format进行拼接。 url = 'http://jst1.58.com/counter?infoid=&#123;&#125;'.format(str(part_link)) headers = &#123; 'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36', 'Cookie':'id58=Ch8BCFjaxDmGEQfEAxATAg==; 58home=bj; als=0; commonTopbar_myfeet_tooltip=end; city=bj; myfeet_tooltip=end; bj58_id58s=\"WlB6dVpRaTAtTXZ1MTUxNg==\"; sessionid=3f9c77fd-4820-45b2-9ec1-168efe3791b2; es_ab=1; 58tj_uuid=aff6d5b1-071f-4599-a863-3583cc4e2c14; new_uv=6; bj58_new_session=1; bj58_init_refer=\"http://bj.58.com/shouji/\"; bj58_new_uv=4', 'Accept':'*/*', 'Accept-Encoding':'gzip, deflate, sdch', 'Accept-Language':'zh-CN,zh;q=0.8', 'Connection':'keep-alive', 'Host':'jst1.58.com', 'Referer':'http://bj.58.com/shouji/&#123;&#125;x.shtml'.format(str(part_link)) &#125; resp = requests.get(url,headers=headers) #从response中我们看到，浏览量的数值是返回代码的最后的数值，并且在一个=后面，所以我们可以这样进行取值 if resp.status_code == 200: return resp.text.split('=')[-1] return 0 Then we finished this part. Zhuanzhuan Users LinkThis part we need scrapying the following information:And from the source code, we don’t encounter any problem, so it is the scrapying code:1234567891011121314151617181920def get_zhuanzhuan_detail(url,data=None): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') try: data = &#123; 'title': soup.select('div.info_lubotu.clearfix &gt; div.box_left_top &gt; h1')[0].text, 'categorie': soup.select('span.crb_i &gt; a')[0].text, 'price': soup.select('div.info_massege.left &gt; div.price_li &gt; span &gt; i')[0].text, 'area': soup.select('div.info_massege.left &gt; div.palce_li &gt; span &gt; i')[0].text, 'sailer': soup.select('div.personal_jieshao &gt; p.personal_name')[0].text, 'review': soup.select('div.box_left_top &gt; p &gt; span.look_time')[0].text, 'label': list(soup.select('div.info_massege.left &gt; div.biaoqian_li')[0].stripped_strings) &#125; print('Title: '+data['title']+'\\n'+'sailer: '+ data['sailer']+ '\\n' +'Categorie: '+data['categorie']+'\\n'+'Price: '+data['price']+'\\n'+'Area: '+data['area']+'\\n'+'Review: '+data['review']+'\\n'+'Label: '+str(data['label'])) print('==========================') except Exception as e: print(e) pass And the result is:12345678Title: 苹果 iPhone7 Plus 金色 128G 国行 苹果7 plus 国行版本 128g的 金色的sailer: 屠伍郤Categorie: 北京二手市场Price: 4640Area: 北京-昌平Review: 402次浏览Label: ['真实个人', '担保交易', '支持全国']========================== IntegrationNow we can integrate the whole item, the list and two detail pages:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384from bs4 import BeautifulSoupimport requestsurl = 'http://bj.58.com/shouji/'def get_list(url,data=None): resp = requests.get(url) soup = BeautifulSoup(resp.text,'lxml') links = soup.select('tbody &gt; tr &gt; td.t &gt; a.t') for link in links: link = link.get('href').split('?')[0] if link[0:26] != 'http://jump.zhineng.58.com': if link[0:17] == 'http://bj.58.com/': get_detail_58(link) elif link[0:17] == 'http://zhuanzhuan': get_zhuanzhuan_detail(link) else: print('Unknown Address' + link) def get_review(url): part_link = url.split('/')[-1].strip('x.shtml') url = 'http://jst1.58.com/counter?infoid=&#123;&#125;'.format(str(part_link)) headers = &#123; 'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36', 'Cookie':'id58=Ch8BCFjaxDmGEQfEAxATAg==; 58home=bj; als=0; commonTopbar_myfeet_tooltip=end; city=bj; myfeet_tooltip=end; bj58_id58s=\"WlB6dVpRaTAtTXZ1MTUxNg==\"; sessionid=3f9c77fd-4820-45b2-9ec1-168efe3791b2; es_ab=1; 58tj_uuid=aff6d5b1-071f-4599-a863-3583cc4e2c14; new_uv=6; bj58_new_session=1; bj58_init_refer=\"http://bj.58.com/shouji/\"; bj58_new_uv=4', 'Accept':'*/*', 'Accept-Encoding':'gzip, deflate, sdch', 'Accept-Language':'zh-CN,zh;q=0.8', 'Connection':'keep-alive', 'Host':'jst1.58.com', 'Referer':'http://bj.58.com/shouji/&#123;&#125;x.shtml'.format(str(part_link)) &#125; resp = requests.get(url,headers=headers) if resp.status_code == 200: return resp.text.split('=')[-1] return 0 def get_detail_58(url,data=None): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') try: area_detail = '' are a = soup.select('ul.suUl &gt; li:nth-of-type(3) &gt; div.su_con &gt; span.c_25d')[0] area = list(area.stripped_strings) area = area_detail.join(area) data = &#123; 'title':soup.select('div.per_ad_left &gt; div.col_sub.mainTitle &gt; h1')[0].text, 'categorie':soup.select('div.breadCrumb.f12 &gt; span:nth-of-type(3) &gt; a')[0].text.replace('\\r\\n','').strip(), 'price':soup.select('div.su_con &gt; span.price.c_f50')[0].text, 'area':area, 'time':soup.select('ul.mtit_con_left.fl &gt; li.time')[0].text, 'review':get_review(url) &#125; print('Title: '+data['title']+'\\n'+'Time: '+ data['time']+ '\\n' +'Categorie: '+data['categorie']+'\\n'+'Price: '+data['price']+'\\n'+'Area: '+data['area'] +'\\n' + 'Review: ' + data['review']) print('==========================') except Exception as e: print(e) passdef get_zhuanzhuan_detail(url,data=None): resp = requests.get(url) if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') try: data = &#123; 'title': soup.select('div.info_lubotu.clearfix &gt; div.box_left_top &gt; h1')[0].text, 'categorie': soup.select('span.crb_i &gt; a')[0].text, 'price': soup.select('div.info_massege.left &gt; div.price_li &gt; span &gt; i')[0].text, 'area': soup.select('div.info_massege.left &gt; div.palce_li &gt; span &gt; i')[0].text, 'sailer': soup.select('div.personal_jieshao &gt; p.personal_name')[0].text, 'review': soup.select('div.box_left_top &gt; p &gt; span.look_time')[0].text, 'label': list(soup.select('div.info_massege.left &gt; div.biaoqian_li')[0].stripped_strings) &#125; print('Title: '+data['title']+'\\n'+'sailer: '+ data['sailer']+ '\\n' +'Categorie: '+data['categorie']+'\\n'+'Price: '+data['price']+'\\n'+'Area: '+data['area']+'\\n'+'Review: '+data['review']+'\\n'+'Label: '+str(data['label'])) print('==========================') except Exception as e: print(e) passget_list(url) And this is the final result:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162Title: 授权实体店(分期）（置换）（高价回收）苹果、三星、华为、oppo、步步高、等各种机型Time: 2017-03-29Categorie: 北京二手手机Price: 5000Area: 海淀-中关村Review: 380==========================Title: 正规实体店《火爆》《0首付分期》,出售二手苹果,三星手机,支持以旧换新Time: 2017-03-21Categorie: 北京二手手机Price: 1666Area: 海淀-北京大学Review: 4472==========================Title: 苹果7 7p分期付款支持以旧换新Time: 2017-03-28Categorie: 北京二手手机Price: 4199Area: 朝阳-朝外大街Review: 624==========================Title: 三星 16G 转让三星 电信版3G 全网通双卡手机sailer: 京东 商城Categorie: 北京二手市场Price: 200Area: 北京-海淀Review: 30次浏览Label: ['真实个人', '担保交易', '支持全国']==========================Title: 中兴 16G 转让中兴BA910 全新手机sailer: 青春hlCategorie: 北京二手市场Price: 750Area: 北京-丰台Review: 7次浏览Label: ['真实个人', '担保交易', '支持全国']==========================Title: 三星 S7 edge 32G 三星s7edge 三星曲屏sailer: 博衣城`Categorie: 北京二手市场Price: 1900Area: 北京-西城Review: 40次浏览Label: ['真实个人', '担保交易', '支持全国']==========================Title: 苹果 iPhone6 金色 16G 国行 iPhone 6金色官换机16G，很新，一直作备用机用sailer: 邓成82458829Categorie: 北京二手市场Price: 1700Area: 北京-海淀Review: 41次浏览Label: ['真实个人', '担保交易', '支持全国']==========================Title: 苹果 iPhone6s Plus 银色 128G 国行 女生转刚买几个月的苹果6sp银白色三网通4Gsailer: 默默的远观`Categorie: 北京二手市场Price: 2579Area: 北京-朝阳Review: 150次浏览Label: ['真实个人', '担保交易', '支持全国']==========================...","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"requests","slug":"requests","permalink":"http://clovel.cn/tags/requests/"},{"name":"Python","slug":"Python","permalink":"http://clovel.cn/tags/Python/"},{"name":"BeautifulSoup","slug":"BeautifulSoup","permalink":"http://clovel.cn/tags/BeautifulSoup/"},{"name":"javascript","slug":"javascript","permalink":"http://clovel.cn/tags/javascript/"}]},{"title":"Practice2：Download Scarlet Witch's Picture From WeHeartit WebSite","slug":"Practice-2_-Download-Scarlett-Pictures-From-WeHeartit-With-Python","date":"2017-03-31T21:01:52.000Z","updated":"2017-09-18T19:49:18.000Z","comments":true,"path":"2017/03/31/Practice-2_-Download-Scarlett-Pictures-From-WeHeartit-With-Python/","link":"","permalink":"http://clovel.cn/2017/03/31/Practice-2_-Download-Scarlett-Pictures-From-WeHeartit-With-Python/","excerpt":"Today’s topic is download Scarlet Witch’s photo from this website:[http://weheartit.com/allsimpleannie/collections/108140702-elizabeth-olsen], actually this is a albums.","text":"Today’s topic is download Scarlet Witch’s photo from this website:[http://weheartit.com/allsimpleannie/collections/108140702-elizabeth-olsen], actually this is a albums.So, if we want to download these pictures, we need understand this method:urlretrieve,it’s mainly for that.Before that, We need to carefully observe the site, at the bottom of the page, we will find that the site does not have the next page button, but when sliding down, it will automatically load the next page, it called the asynchronous loading mechanism, we can open the network tools, and then slide down the pages, we can see the emergence of page2,3,4 …., these are the sites we want to crawl.Ok, observation works done, we can start to scrapying:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354from bs4 import BeautifulSoupimport requests,urllib.request,time,random,jsonurl = 'http://weheartit.com/illuminatedangel/collections/110706595-lizzie?page='# Due to headers is too long, we only show little part here.headers = &#123; 'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3)...', 'Cookie':'locale=zh-cn; __whiAnonymousID=1c638e0793074dc589930e2a82f2 ...' &#125;# Import Proxies Pool Form https://github.com/qiyeboy/IPProxyPoolr = requests.get('http://127.0.0.1:8000/?types=0&amp;count=100&amp;protocol=1&amp;country=国外') ip_ports = json.loads(r.text) ips = []for i in ip_ports: proxies=&#123;\"http\": \"http://%s:%s\"%(i[0],i[1])&#125;def pic_address(url,data=None): resp = requests.get(url,headers=headers,proxies=proxies,timeout=10) #如果返回状态码是200，才进行爬取 if resp.status_code == 200: soup = BeautifulSoup(resp.text,'lxml') images = soup.select('a.js-entry-detail-link &gt; img.entry-thumbnail') #构建下载文件夹路径 folder_path = '/Users/wangcheng/Desktop/Python-Test/Picture/' download_list = [] count = 0 for img in images: download_list.append(img['src']) for item in download_list: # urlretrieve是专门用来下载的方法 try: urllib.request.urlretrieve(item,folder_path + item[-24:-16] + item[-4:]) print('Done'+str(count)) count = count+1 except Exception as e: print(e) pass#由于异步加载无法确定准确的页数，所以可以这样进行获取def get_more_pages(start,end): for i in range(start,end): pic_address(url+str(i))get_more_pages(1,10)'''http://weheartit.com/inspirations/taylorswift?scrolling=true&amp;page=4&amp;before=194521683http://weheartit.com/inspirations/taylorswift?scrolling=true&amp;page=5&amp;before=282503494http://weheartit.com/inspirations/taylorswift?scrolling=true&amp;page=6&amp;before=282497686''' And the result is here: In this process, i encountered the website of the anti-crawling mechanism, so we need built the proxies pool, and from github, i found a good one:[https://github.com/qiyeboy/IPProxyPool], It’s easy to use, thanks for the author.","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://clovel.cn/tags/Python/"},{"name":"BeautifulSoup","slug":"BeautifulSoup","permalink":"http://clovel.cn/tags/BeautifulSoup/"},{"name":"Urllib","slug":"Urllib","permalink":"http://clovel.cn/tags/Urllib/"},{"name":"Urlretrieve","slug":"Urlretrieve","permalink":"http://clovel.cn/tags/Urlretrieve/"},{"name":"Download","slug":"Download","permalink":"http://clovel.cn/tags/Download/"}]},{"title":"Practice1：Tripadvisor Attractions Scapying with Python","slug":"Practice-1_-Tripadvisor-Attractions-Scapying-with-Python","date":"2017-03-27T20:31:41.000Z","updated":"2017-04-01T16:53:16.000Z","comments":true,"path":"2017/03/27/Practice-1_-Tripadvisor-Attractions-Scapying-with-Python/","link":"","permalink":"http://clovel.cn/2017/03/27/Practice-1_-Tripadvisor-Attractions-Scapying-with-Python/","excerpt":"This blog’s goal is spide all attractions in New York from TripAdvisor, and here is it’s address:[‘https://cn.tripadvisor.com/Attractions-g60763-Activities-New_York_City_New_York.html&#39;] 1 BackGroundFirst, we need understand the exchange mechanism between the server and local, that is our personal pc send a requests to the server, and when the server got the requests, it will make a response.In Http 1.1, Requests include eight methods: Post, Get, Head, Put, Options, Connect, Trace and Delete. But the most commonly used is post and get. And when we crawl information with python, we are actually simulating these two methods.","text":"This blog’s goal is spide all attractions in New York from TripAdvisor, and here is it’s address:[‘https://cn.tripadvisor.com/Attractions-g60763-Activities-New_York_City_New_York.html&#39;] 1 BackGroundFirst, we need understand the exchange mechanism between the server and local, that is our personal pc send a requests to the server, and when the server got the requests, it will make a response.In Http 1.1, Requests include eight methods: Post, Get, Head, Put, Options, Connect, Trace and Delete. But the most commonly used is post and get. And when we crawl information with python, we are actually simulating these two methods. 2 Scapying ProcessFrom the first image, we can see a attractions lists, each attraction has picture, title, review and label, and now we prepare to scapy these item.But in the list of attractions, there are many activities of the collection and the recent activities, we do not need to crawl these two, so we need to remove them.And the source code is:123456789101112131415161718192021222324252627282930313233343536373839from bs4 import BeautifulSoupimport requestsimport time#列表用format进行格式化，这样可以访问多页urls = ['https://cn.tripadvisor.com/Attractions-g60763-Activities-oa&#123;&#125;-New_York_City_New_York.html#ATTRACTION_LIST'.format(str(i)) for i in range(0,1080,30)]headers = &#123; 'User-Agent': 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Mobile Safari/537.36', 'Cookie': 'PMC=V2*MS.87*MD.20170326*LD.20170326;....etc.&#125;def get_attractions(url,data=None): resp = requests.get(url,headers=headers) time.sleep(3) #使用text方法，使文件可读 soup = BeautifulSoup(resp.text,'lxml') titles = soup.select('a &gt; div.container.containerLLR &gt; div.title.titleLLR &gt; div.location') images = soup.select('div.thumb.thumbLLR.soThumb &gt; div') tags = soup.select('div.container.containerLLR &gt; div.attraction_types &gt; span') if data == None: for title,image,tag in zip(titles,images,tags): #观察普通景点和活动集合，发现活动集合的第一个a的id都是a0，而普通景点的则是一串数,若Title的父级标签a的id不是a0，则执行，否则，不进行爬取。 if not title.find_parents(id='a0'): data = &#123; #replace是将获得的文本中前后的\\n符号替换成空格 'title': title.get_text().replace('\\n',''), #image直接爬取失败，有反爬。采用移动端，并且发现img上方div标签的data-thumburl的值，与img的src相同，所以我们可以爬取data-thumbuel 'image': image.get('data-thumburl'), 'tag': tag.get_text(), &#125; print('Title: '+data['title']+'\\n'+'Image: '+data['image']+'\\n'+'Tag: '+data['tag'] ) pritn('================================')for url in urls: get_attractions(url) And we can see the result:12345678910111213141516171819202122232425262728Title: 中央公园Image: https://media-cdn.tripadvisor.com/media/photo-l/09/58/1e/b1/central-park.jpgTag: 景点与地标, 公园, 景观步行区==============================Title: 9/11纪念馆Image: https://media-cdn.tripadvisor.com/media/photo-l/09/49/10/a9/img-20151021-134637-largejpg.jpgTag: 专业博物馆, 景点与地标, 纪念碑与雕像, 历史景点==============================Title: 大都会艺术博物馆Image: https://media-cdn.tripadvisor.com/media/photo-f/04/22/1c/fc/metropolitan-museum-of.jpgTag: 景点与地标, 艺术博物馆==============================Title: 峭石之巅观景台Image: https://media-cdn.tripadvisor.com/media/photo-l/06/79/60/b4/observatorio-top-of-the.jpgTag: 观察台与观景塔, 瞭望台==============================Title: 曼哈顿天际线Image: https://media-cdn.tripadvisor.com/media/photo-f/01/b8/fc/53/manhattan-skyline.jpgTag: 景点与地标==============================Title: 大中央车站Image: https://media-cdn.tripadvisor.com/media/photo-l/08/8e/db/95/the-largest-tiffany-glass.jpgTag: 景点与地标==============================Title: 百老汇Image: https://media-cdn.tripadvisor.com/media/photo-l/07/e1/9f/a5/broadway.jpgTag: 景观步行区, 公园============================== Due to we can not scrapying image address on the web page, so we try to scrapy the mobile pages, now, we choose GalaxyS5 as our test goals. Google Developer Tools is a perfect helper, we can use it to finish this step.If we want to scrapying much pages, we need understand the rules of the website, we can see:1234567#This is the first pages' urlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-New_York_City_New_York.html#This is the second, the third and the last pages' url:https://cn.tripadvisor.com/Attractions-g60763-Activities-oa30-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa60-New_York_City_New_York.html...https://cn.tripadvisor.com/Attractions-g60763-Activities-oa1050-New_York_City_New_York.html It’s easy to find, each url has a little different, the number after oa, and the interval is 30, so we can built a list of expressions:[&#39;https://cn.tripadvisor.com/Attractions-g60763-Activities-oa{}-New_York_City_New_York.html&#39;.format(str(i)) for i in range(0,1080,30)],it can show all urls.And we can use a simple code test this:12345678910111213&gt;&gt;&gt; urls = ['https://cn.tripadvisor.com/Attractions-g60763-Activities-oa&#123;&#125;-New_York_City_New_York.html'.format(str(i)) for i in range(0,1080,30)]&gt;&gt;&gt; for url in urls:... print(url)...https://cn.tripadvisor.com/Attractions-g60763-Activities-oa0-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa30-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa60-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa90-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa120-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa150-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa180-New_York_City_New_York.htmlhttps://cn.tripadvisor.com/Attractions-g60763-Activities-oa210-New_York_City_New_York.html... So, we got it.And when we want to scrapying the image address, we can not use the image’s src, because it maybe has an anti-crawling system, but it’s easy to find it’s parent’s lable has an attributes named data-thumburl, and it’s value is the same like the images’ src, so we can make some change, to scrapying this attributes. 3. SummaryScrapying do not have a fixed format, as long as you can crawl the information you need, that is correct. So, we have to observe more, try, learn from a different perspective on the problem.","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://clovel.cn/tags/python/"},{"name":"Beautifulsoup","slug":"Beautifulsoup","permalink":"http://clovel.cn/tags/Beautifulsoup/"},{"name":"requests","slug":"requests","permalink":"http://clovel.cn/tags/requests/"}]},{"title":"Python专栏之二：Urllib库","slug":"Python_2_Exploring-Urllib-Library","date":"2016-05-31T13:37:28.000Z","updated":"2017-02-20T14:17:48.000Z","comments":true,"path":"2016/05/31/Python_2_Exploring-Urllib-Library/","link":"","permalink":"http://clovel.cn/2016/05/31/Python_2_Exploring-Urllib-Library/","excerpt":"Urllib是python的标准库，包含了一些处理Url的模块： urllib.request 用于打开和读取urls urllib.error 包含一些urllib.request内抛出的异常 urllib.parse 主要用于对Url进行分析 urllib.robotparser 用于解析robots.txt文件 以上是官方文档的原文，我翻译了一下，其中robot.txt是一个文本文件，他其实是一个协议而非命令，搜索引擎访问网站的时候要看的第一个文件就是robot.txt，他可以告诉爬虫程序在服务器上什么文件是可以被查看的。","text":"Urllib是python的标准库，包含了一些处理Url的模块： urllib.request 用于打开和读取urls urllib.error 包含一些urllib.request内抛出的异常 urllib.parse 主要用于对Url进行分析 urllib.robotparser 用于解析robots.txt文件 以上是官方文档的原文，我翻译了一下，其中robot.txt是一个文本文件，他其实是一个协议而非命令，搜索引擎访问网站的时候要看的第一个文件就是robot.txt，他可以告诉爬虫程序在服务器上什么文件是可以被查看的。 比如： 当一个搜索爬虫访问一个站点，它首先会检查该站点目录下是否存在robots.txt，如果存在，爬虫就会按照该文件中的内容来确定访问的范围；如果不存在，所有爬虫则均能访问网站上所有没有被口令保护的页面。 好，接下来我们分别看这四个模块。 1 urlllib.request模块urllib.request定义了一些类和函数，来帮助我们打开和读取一些urls。它定义了如下函数： 1.1 urlopen() urllib.request.urlopen(url,data=None,[timeout,]*,cafile=None,capath=None,cadefault=False，context=None) 打开一个url，即可以是一段字符串，也可以是一个Request对象。data必须是一个byte对象，它指定了想要传给服务器的额外数据。若没有额外数据（即Get方法），就可以用默认值None。data也可以是可迭代对象，此时Content-length值就需要在header中指明。目前，http请求是唯一使用data的请求，如果提供了data参数，那么默认的请求类型就不是Get而是Post了。timeout是第三个参数，用来设置等待多久超时，为了解决一些网站实现响应过慢而造成的影响。另外几个参数，context是用来描述SSL选择的，其余的没有使用过。该函数总是返回一个对象，用于Context Manager，并且有以下几个方法： geturl() – 返回检索到的Url，通常用于判断是否出现重新导向。 info() – 返回页面的元信息，诸如headers等。 getcode() – 返回response的http状态码。 read() – 返回http页面的内容 可以这样使用： html = urllib.request.urlopen(&quot;www.baidu.com&quot;) print(html.read()) 另外比较常用的函数还有： 1.2 Request() urllib.request.Request(url,data=None,headers={},origin_req_host=None,univerifiable=False,method=None) 这个类是对url请求的抽象，实例化方法为： req = urllib.request.Request(&quot;www.baidu.com&quot;,data,{},None,False,None) 其中：url，data与之前urlopen中的用法相同。headers必须是一个字典。他通常被用于“模仿”用户代理的头，用于通过浏览器来标识自己–一些Http服务只允许普通的浏览器的请求而抵制一些脚本。例如：Mozilla Firefox通过这样来标识它自己“Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11”,而urllib默认的用户代理是“Python-urllib/2.6”。比如我们可以构建下面的headers：headers = { &#39;User-Agent&#39; : &#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#39;,&#39;Referer&#39;:&#39;http://www.zhihu.com/articles&#39; }这样，在传送请求时把headers传入Request参数里，这样就能应付“防盗机制”了。另外headers有一些属性需要注意下： User-Agent：有些服务器或Proxy会通过该值来判断是否是浏览器发出的请求 Content-type：在使用Rest接口时，服务器回来检查该值，用来确定HTTP Body中的内容该如何进行解析(在使用服务器提供的RESTful或SOAP服务时，Content-Type设置错误会导致服务器拒绝服务) application/xml：在XML RPC，如RESTful/SOAP调用时使用 application/json：在JSON RPC调用时使用 application/x-www-form-urlencoded：浏览器提交web表单时使用 origin_req_host和unverifable只是用于对第三方Http Cookie的处理。origin_req_host应该是最初的transaction的请求主机，通过RF2965进行定义。它默认为“http.cookiejar.request_host(self)”method是指定http请求方式，这个必须是string类型，如‘GET’。若提供了这个参数，他会储存在method属性内，可以通过get_method()方法使用。 1.3 response() urllib.response() urllib.response模块定义了操作响应的一些函数和对象。它典型的响应对象是一个addinfourl实例，通过定义一个info()方法，来返回headers和定义geturl()方法，来返回url。通常这些函数都是通过urllib.request内部调用的。我们在调用urllib.request.urlopen()时就会返回一个response对象 常用的函数就这些，接下来我们看urllib.error() 2 urllib.error模块urllib.error模块定义了一些异常类，作用与由urllib.request引发的异常上，其基本的异常类是URLError。接下来是urllib.error内包含的一些异常： 2.1 URLError() urllib.error.URLError handler发生异常的时候回抛这个错误，它有一个reason属性，是一个用来描述错误的字符串。当网络连接出现问题（本地端、服务器端）时，就有可能出现这种异常，我们可以用try-except来捕获这种异常。 2.2 HTTPError() urllib.error.HTTPError HTTPError用来处理外部HTTP异常的时候很有用,比如验证请求。它是URLError的子类，有三个属性：code（Http的状态码），reason（对error的描述，它通常是一个字符串），headers（造成错误的Http请求的响应header）。当我们使用urlopen发出一个请求时，服务器端会有一个应答，而这个应答中包含http的状态码（如404，403等），而其他不能处理的，urlopen就会产生一个HTTPError，对应相应的状态码。HTTP的状态码由RFC 2616定义，表示网页服务器Http响应状态的3位数字代码。我们可以看一下常用的一些状态码，所有状态码的第一个数字代表了响应的五种状态之一。 1xx消息：代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。如 100 Continue，客户端应继续发送请求 101 Switching Protocols，服务器端已经理解了客户端请求，并将通过Upgrade消息头通知客户端采用不同的协议来完成这个请求。 102 Processing，代表处理将被继续执行 2xx成功：代表请求已成功被服务器接收，理解并接受。如 200 OK，请求已成功，请求所希望的响应头或数据体随此响应返回。 201 Created，请求已经被实现，而且有一个新的资源已经依据请求的需要而创建，且其URI已经随Location头信息返回。 202 Accepted，服务器已接受请求，但尚未处理。 203 Non-Authoritative Information，服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。 204 No Content，服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。 205 Reset Content，服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。 206 Partial Content，服务器已经成功处理了部分GET请求。 207 Multi-Status，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。 3xx重定向：代表需要客户端采取进一步的操作才能完成请求。通常这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的Location域中指明。如 300 Multiple Choices，被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。 301 Moved Permanently，被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个Url之一。 302 Found，请求的资源现在临时从不同的Url响应请求。 303 See Other，对应当前请求的响应可以在另一个Url上被找到，且客户端应当才去GET的方式访问那个资源。303响应禁止被缓存。 304 Not Modified，如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体。 305 Use Proxy，被请求的资源必须通过指定的代理才能被访问。 307 Temporary Redirect，请求的资源现在临时从不同的URL响应请求。 4xx客户端错误：这类的状态码代表了客户端看起来可能发生了错误，妨碍了服务器的处理。除非响应的是一个Head请求，否则服务器就应该返回一个解释当前错误状况的实体，以及这是临时的还是永久的状况。如 400 Bad Request，由于包含语法错误，当前请求无法被服务器理解。 401 Unauthorized，当前请求需要用户验证。该响应必须包含一个适用于被请求资源的WWW-Authenticate信息头用以询问用户信息。 402 Payment Required，为了将来可能的需求而预留的。 403 Forbidden，服务器已经理解请求，但是拒绝执行它。 404 Not Found，请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。 405 Method Not Allowed，请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow头信息用以表示处当前资源能够接收的请求方法列表。 406 Not Acceptable，请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 407 Proxy Authentication Required，与401响应类似，只不过客户端必须在代理服务器上进行身份验证。 408 Request Timeout，请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。 409 Conflict，由于和被请求的资源的当前状态之间存在冲突，请求无法完成。 410 Gone，被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。 411 Length Required，服务器拒绝在没有定义Content-Length头的情况下接受请求。 412 Precondition Failed，服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。 413 Request Entity Too Large，服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。 414 Request-URL Too Long，请求的URI长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。 415 Unsupported Media Type，对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。 5xx服务器错误：代表服务器在处理请求的过程中有错误或异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。如 500 Internal Server Error，服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。 501 Not Implemented，服务器不支持当前请求所需要的某个功能。 502 Bad Gateway，作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。 503 Service Unavailable，由于临时的服务器维护或者过载，服务器当前无法处理请求。 504 Gateway Timeout，作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。 505 HTTP Version Not Supported，服务器不支持，或者拒绝支持在请求中使用的HTTP版本。 506 Variant Also Negotiates，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。 第三种异常类型 2.3 ContentTooShortError() urllib.error.ContentTooShortError(msg,content) 这个异常是当函数urlretrieve()查询到的下载数据的数量少于期望的数量时抛出的。 3 urllib.parse模块parse的源代码在这里：[https://hg.python.org/cpython/file/3.5/Lib/urllib/parse.py]这个模块定义了许多处理URL的函数，它可以对URL进行解析，将其解析成不同的部分，同样也可以将不同的部分拼装成URL，甚至可以将相对URL转换成绝对URL。这个模块已经被设计为在相对Url上匹配Internet RFC。它支持下列的Url模式：file, ftp, gopher, hdl, http, https, imap, mailto, mms, news, nntp, prospero, rsync, rtsp, rtspu, sftp, shttp, sip, sips, snews, svn, svn+ssh, telnet, wais.Urllib.parser模块定义的这些函数有两大功能：网址解析和Url引用。下面的内容中我们将会详细进行解释：Url Parsing （URL解析）Url解析部分的函数主要是用于将Url字符串解析成不同的部分，或者将不同部分的Url部分合并成Url字符串。 3.1 urlparse() urllib.parse.urlparse(urlstring,scheme=&quot;,allow_fragments=True) 这个函数是将URL解析成六个Components，返回一个六元组。它与URl的通用架构相符合，即schema://netloc/path;parameters?query#fragment。每个元组项是一个字符串或为空。组件不能被解析为更小的部分，%后面也不会被解析，分隔符号并不是解析结果的一部分，除非用斜线转义。代码示例如下： &gt;&gt;&gt; from urllib.parse import urlparse &gt;&gt;&gt; o = urlparse(&apos;https://docs.python.org/3.5/library/urllib.parse.html#url-parsing&apos;) &gt;&gt;&gt; o ParseResult(scheme=&apos;https&apos;, netloc=&apos;docs.python.org&apos;, path=&apos;/3.5/library/urllib.parse.html&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;url-parsing&apos;) &gt;&gt;&gt; o.scheme &apos;https&apos; &gt;&gt;&gt; o.geturl() &apos;https://docs.python.org/3.5/library/urllib.parse.html#url-parsing&apos; &gt;&gt;&gt; urlparse(&apos;help/Python.html&apos;) ParseResult(scheme=&apos;&apos;, netloc=&apos;&apos;, path=&apos;help/Python.html&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;&apos;) &gt;&gt;&gt; urlparse(&apos;www.cwi.nl/%7Eguido/Python.html&apos;) ParseResult(scheme=&apos;&apos;, netloc=&apos;&apos;, path=&apos;www.cwi.nl/%7Eguido/Python.html&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;&apos;) Urlparse 只有当正确的添加‘//’时才能识别出netloc字段，如上例子，后两个网址netlic的值都为空。这里面： scheme：Url scheme specifier netloc：Network location part path：Hierarchical path params：parameters for last path element query：Query component fragment：Fragment identifier 3.2 parse_qs() urllib.parse.parse_qs(qs,keep_blank_values=False,strict_parsing=False,encoding=’utf-8’,errors=’replace’) 上述函数是解析给出字符串参数的查询字符串，返回一个字典类型，字典的Key是唯一的查询变量名，Value是每个名字值的列表。 3.3 parse_qsl() urllib.parse.parse_qsl(qs, keep_blank_values=False, strict_parsing=False, encoding=&apos;utf-8&apos;, errors=&apos;replace&apos;) 上述函数同样是解析给出字符串参数的查询字符串，不同的是该函数返回的是一个名字列表。 3.4 urlunparse() urllib.parse.urlunparse(parts) 这个函数将urlparse()返回的六元组构建成一个正确格式的URL。 3.5 urlsplit() urllib.parse.urlsplit(urlstring,schema=&quot;,allow_fragments=True) 它与urlparse()相似，用法基本一致，但略有不同，split函数在分割的时候，path属性和params属性是在一起的。如： &gt;&gt;&gt; from urllib.parse import urlparse &gt;&gt;&gt; from urllib.parse import urlsplit &gt;&gt;&gt; o = urlparse(&apos;https://docs.python.org/3.5/library/urllib.parse.html#url-parsing&apos;) &gt;&gt;&gt; p = urlsplit(&apos;https://docs.python.org/3.5/library/urllib.parse.html#url-parsing&apos;) &gt;&gt;&gt; o ParseResult(scheme=&apos;https&apos;, netloc=&apos;docs.python.org&apos;, path=&apos;/3.5/library/urllib.parse.html&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;url-parsing&apos;) &gt;&gt;&gt; p SplitResult(scheme=&apos;https&apos;, netloc=&apos;docs.python.org&apos;, path=&apos;/3.5/library/urllib.parse.html&apos;, query=&apos;&apos;, fragment=&apos;url-parsing&apos;) 我们可以看到split函数并没有params属性。它主要是用来分析Urlstring，返回的是一个五元组。 3.6 urlunsplit() urllib.parse.urlunsplit(parts) 这个函数的作用与urlunparse()类似，但它合并的是urlsplit()函数返回的元组，将其合并成一个完整的Url字符串。 3.7 urljoin() urllib.parse.urljoin(base,url,allow_fragments=True) 这个函数主要用来拼接Url，它以base为基地址，然后同url中的相对地址结合形成一个绝对地址。通俗的说，它使用基础Url的组成部分，尤其是解决方案、网络位置和部分路径，来提供相对Url所缺少的部分。例如： &gt;&gt;&gt; from urllib.parse import urljoin &gt;&gt;&gt; urljoin(&apos;http://www.cwi.nl/%7Eguido/Python.html&apos;, &apos;FAQ.html&apos;) &apos;http://www.cwi.nl/%7Eguido/FAQ.html&apos; 注意：如果url是绝对url（即由//或scheme://开始的），那么这个url的主机名或scheme会出现在结果中。例如： &gt;&gt;&gt; urljoin(‘http://www.cwi.nl/%7Eguido/Python.html&#39;,&#39;//www.python.org/%7Eguido&#39;) ‘http://www.python.org/%7Eguido&#39; 若去掉url前面的//，则不会出现这种情况。所以，如果你不希望出现这种情况，应该先用urlsplit()和urlunsplit()对url进行预处理,消除可能的scheme和netloc部分。","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://clovel.cn/tags/python/"},{"name":"scraping","slug":"scraping","permalink":"http://clovel.cn/tags/scraping/"},{"name":"urllib","slug":"urllib","permalink":"http://clovel.cn/tags/urllib/"}]},{"title":"Python专栏之一：初识爬虫","slug":"Python_1_Say-hello-to-spider","date":"2016-05-28T21:15:14.000Z","updated":"2016-06-05T06:31:20.000Z","comments":true,"path":"2016/05/28/Python_1_Say-hello-to-spider/","link":"","permalink":"http://clovel.cn/2016/05/28/Python_1_Say-hello-to-spider/","excerpt":"学习爬虫，我们首先要对网页的构成有一定的了解，比如HTML的文本格式、CSS的样式和Javascript的格式等。然后我们还需要对网络连接有一些了解，这样说起来显着比较困难，但其实做起来很简单。 好，让我们一步一步来。 环境：Python3.5 | MacOs X EICaption 浏览器信息的获取过程:假设我有一台主机，然后准备连接一个服务器： 首先我的主机会发送一连串的比特值，这些比特值构成的信息包括两个部分，一是请求头，二是消息体；其中，请求头中包括我的本地路由器的Mac地址以及我将要连接的服务器的IP地址，然后消息体中包含了我发出的请求； 当我的路由器收到这串比特值时，会将自己的Ip地址加进去，然后发出； 这段数据会经过许多中介服务器，然后最终会到达我所希望访问的服务器的Ip地址所在地； 服务器在它的Ip地址收到这段数据后，服务器会读取请求头中的目标端口，然后将其传递到对应的网络服务器应用上； 网络服务器收到服务器处理器传过来的数据：这是一个GET请求；请求文件index.html； 网络服务器应用找到对应的html文件，然后打包成一个新的数据包发回到我的路由器中，然后传到我的主机，到这儿，浏览器的信息即获取成功。","text":"学习爬虫，我们首先要对网页的构成有一定的了解，比如HTML的文本格式、CSS的样式和Javascript的格式等。然后我们还需要对网络连接有一些了解，这样说起来显着比较困难，但其实做起来很简单。 好，让我们一步一步来。 环境：Python3.5 | MacOs X EICaption 浏览器信息的获取过程:假设我有一台主机，然后准备连接一个服务器： 首先我的主机会发送一连串的比特值，这些比特值构成的信息包括两个部分，一是请求头，二是消息体；其中，请求头中包括我的本地路由器的Mac地址以及我将要连接的服务器的IP地址，然后消息体中包含了我发出的请求； 当我的路由器收到这串比特值时，会将自己的Ip地址加进去，然后发出； 这段数据会经过许多中介服务器，然后最终会到达我所希望访问的服务器的Ip地址所在地； 服务器在它的Ip地址收到这段数据后，服务器会读取请求头中的目标端口，然后将其传递到对应的网络服务器应用上； 网络服务器收到服务器处理器传过来的数据：这是一个GET请求；请求文件index.html； 网络服务器应用找到对应的html文件，然后打包成一个新的数据包发回到我的路由器中，然后传到我的主机，到这儿，浏览器的信息即获取成功。 from urllib.request import urlopen html = urlopen(&quot;http://www.baidu.com&quot;) print(html.read()) 上面的这段代码会输出”wwww.baidu.com&quot;这个页面的全部Html代码， from urllib.request import urlopen 这句话是查找Python的urllib库内的request模块，然后导入这个模块内的一个函数urlopen，这个函数的作用是用来打开并读取一个从网络获取的远程的对象。而urllib是python的标准库，包含了从网络请求数据，处理cookie，改变请求头，用户代理等一系列的函数。具体内容可以参考urllib的文档：[https://docs.python.org/3.5/library/urllib.html]","categories":[{"name":"python","slug":"python","permalink":"http://clovel.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://clovel.cn/tags/python/"},{"name":"scraping","slug":"scraping","permalink":"http://clovel.cn/tags/scraping/"}]}]}